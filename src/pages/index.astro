---
import Layout from '../layouts/Layout.astro';

import Navigation from '../components/Navigation.astro';
import Monaco from '../components/Monaco.astro';
import Duck from '../components/Duck.astro';
import Chat from '../components/Chat.astro';
import Response from '../components/Response.astro';
---

<Layout title="Debug with a duck">
	<main>
		<Navigation />
		<div class="h-screen w-screen flexbox">
			<br>
			<br>
			<!-- A div that splits the content into two columns -->
			<div class="flex sm:columns-1 lg:columns-2 md:columns-1 p-5">
				<div class="w-full max-h-full p-5">
					<div id="instructions">
						<div class="rounded-lg shadow-md bg-white p-5">
							<h2 class="text-xl font-sans font-bold"><span class="text-transparent bg-clip-text bg-gradient-to-br from-yellow-400 to-orange-500">Let's get quacking!</span></h2>
							<div class="h-3"></div>
							<hr>
							<div class="h-3"></div>
							<p>
								To get started with the ducky debugger, simply paste the problem code in the code editor
								below. Then, talk through the code with the duck line by line- don't worry, the duck will
								let you know where you went wrong.
							</p>
							<br>
							<button id="tutorial-ok" class="rounded-md bg-gradient-to-br from-yellow-400 to-orange-500 p-2 pl-4 pr-4 text-white">Ok!</button>
						</div>
						<br>
					</div>
					<Monaco />
					<br>
					<Chat />
				</div>
				<div class="w-full max-h-full p-5">
					<Response />
					<Duck />
				</div>
			</div>
		</div>
	</main>
</Layout>

<script>
	// When user clicks "ok!", delete the instructions (typescript)
	const okButton = document.getElementById('tutorial-ok');
	const instructions = document.getElementById('instructions');

	if (!okButton || !instructions) {
		throw new Error('Could not find instructions or ok button');
	}

	okButton.addEventListener('click', () => {
		instructions.remove();
	});
</script>

<style>
	main {
		margin: auto;
	}
	h1 {
		font-size: 3rem;
		font-weight: 800;
		margin: 0;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		line-height: 1.6;
		margin: 1rem 0;
		border: 1px solid rgba(var(--accent), 25%);
		background-color: white;
		padding: 1rem;
		border-radius: 0.4rem;
	}
	.instructions code {
		font-size: 0.875em;
		font-weight: bold;
		background: rgba(var(--accent), 12%);
		color: rgb(var(--accent));
		border-radius: 4px;
		padding: 0.3em 0.45em;
	}
	.instructions strong {
		color: rgb(var(--accent));
	}
</style>
