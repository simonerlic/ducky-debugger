<div class="rounded-lg shadow-md bg-white p-5">
    <h2 class="text-xl font-sans font-bold"><span class="text-transparent bg-clip-text bg-gradient-to-br from-yellow-400 to-orange-500">Talk to the duck about your code</span></h2>
    <div class='h-3'></div>
    <hr>
    <div class='h-3'></div>
    <div>
        <textarea id="inputText" class="w-full bg-gray-50 p-2 rounded-md font-mono" placeholder="Put your explanation here"></textarea>
        <br><br>
        <button id="send-message" class="rounded-md bg-gradient-to-br from-yellow-400 to-orange-500 p-2 pl-4 pr-4 text-white">Send</button>
    </div>   
</div>

<script>
    // import the monaco editor
    import * as monaco from 'monaco-editor'

    async function sendMessage() {

        // Show the typing indicator
        const output = document.getElementById('output') as HTMLDivElement;
        
        output.appendChild(document.createElement('hr'));
        output.appendChild(document.createElement('br'));
        const typingIndicator = document.getElementById('typing-indicator') as HTMLDivElement;
        typingIndicator.style.display = 'inline'; // Show typing indicator

        // Ensure the editor is initialized
        while (monaco.editor.getModels().length === 0) {
            await new Promise(resolve => setTimeout(resolve, 100));
        }

        // Grab the text input and the text in the monaco editor
        let textInput = document.getElementById('inputText') as HTMLInputElement;
        let codeText = monaco.editor.getModels()[0].getValue();

        // Create a new paragraph element to display the user's query
        const query = document.createElement('p') as HTMLParagraphElement;
        query.innerText = textInput.value;

        // Add the query to the output div
        output.appendChild(query);
        output.appendChild(document.createElement('br'));

        

        // Send the request to the API
        let response = await fetch('/api/completion', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                text: textInput.value,
                code: codeText,
            }),
        });

        // Get the JSON response from the API
        const data = await response.json();

        typingIndicator.style.display = 'none';

        // Display the AI's response in the "response-container" div
        const p = document.createElement('p') as HTMLParagraphElement;
        p.innerText = data.message;
        p.classList.add('text-transparent', 'bg-clip-text', 'bg-gradient-to-br', 'from-yellow-400', 'to-orange-500');

        // Add the response to the output div
        
        output.appendChild(document.createElement('hr'));
        output.appendChild(document.createElement('br'));
        output.appendChild(p);
        output.appendChild(document.createElement('br'));
        
        p.scrollIntoView();
    }

    // Add an event listener to the send button
    document.getElementById('send-message')!.addEventListener('click', sendMessage);
</script>