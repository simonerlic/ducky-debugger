<div class="rounded-lg shadow-md bg-white p-5 h-[40vh] overflow-auto scroll-smooth">
    <!-- Div with title on left side, and button on right -->
    <div class="flex justify-between items-center">
        <h2 class="text-xl font-sans font-bold"><span class="text-transparent bg-clip-text bg-gradient-to-br from-yellow-400 to-orange-500">Chat Log</span></h2>
        
        <!-- Reset button -->
        <button id="reset" class="px-2 rounded-md bg-gradient-to-br from-yellow-400 to-orange-500 text-white">Reset</button>
    </div>
    <div class="h-3"></div>
    <hr>
    <div class="h-3"></div>
 
    <div id="output">
        <p class="text-transparent bg-clip-text bg-gradient-to-br from-yellow-400 to-orange-500">Hi! I'm excited to help you debug your code!</p>
        <br>
    </div>
    <div id="typing-indicator"  style="display: none;">
        <span></span><span></span><span></span>
    </div>
</div>

<script>
    // Get the reset button
    var resetButton = document.getElementById("reset");

    // Add an event listener to the reset button
    resetButton?.addEventListener("click", reset);

    // Function to reset the chat log
    async function reset() {
        // Get the output div
        var output = document.getElementById("output");
        
        // Remove all the children of the output div
        while (output?.firstChild) {
            output.removeChild(output.firstChild);
        }

        await fetch('/api/completion', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                action: 'clear',
            }),
        });

        // Add a new message to the output div
        var message = document.createElement("p");
        message.classList.add("text-transparent", "bg-clip-text", "bg-gradient-to-br", "from-yellow-400", "to-orange-500");
        message.textContent = "I'm all reset and ready to help out!";


        output?.appendChild(message);
        output?.appendChild(document.createElement("br"));
    }
</script>

<style>
    #typing-indicator {
        display: flex;
        justify-content: space-between;
        width: 40px;
    }

    #typing-indicator span {
        display: inline-block;
        width: 6px;
        height: 6px;
        background-color: #FFAA00;
        border-radius: 50%;
        opacity: 0.4;
        animation: typing 1.5s infinite;
    }

    #typing-indicator span:nth-child(1) {
        animation-delay: 0s;
    }

    #typing-indicator span:nth-child(2) {
        animation-delay: 0.2s;
    }

    #typing-indicator span:nth-child(3) {
        animation-delay: 0.4s;
    }

    @keyframes typing {
        0% {
            transform: translateY(0);
        }
        50% {
            transform: translateY(-6px);
            opacity: 1;
        }
        100% {
            transform: translateY(0);
        }
    }
</style>